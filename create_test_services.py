#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Å–ª—É–≥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞
"""
import sqlite3
import uuid

def create_test_services():
    """–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞"""
    conn = sqlite3.connect("src/reports.db")
    cursor = conn.cursor()
    
    try:
        print("üõ†Ô∏è –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –±–∏–∑–Ω–µ—Å—ã
        cursor.execute("SELECT id, name, business_type FROM Businesses")
        businesses = cursor.fetchall()
        
        for business_id, business_name, business_type in businesses:
            print(f"\nüìã –°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥–∏ –¥–ª—è: {business_name} ({business_type})")
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Å–ª—É–≥–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –±–∏–∑–Ω–µ—Å–∞
            if business_type == 'beauty_salon':
                services = [
                    ("–ñ–µ–Ω—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞", "–°—Ç—Ä–∏–∂–∫–∞ –≤–æ–ª–æ—Å –ª—é–±–æ–π –¥–ª–∏–Ω—ã —Å —É–∫–ª–∞–¥–∫–æ–π", "haircut", "—Å—Ç—Ä–∏–∂–∫–∞, –≤–æ–ª–æ—Å—ã, —É–∫–ª–∞–¥–∫–∞", "2500"),
                    ("–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ", "–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –≤–æ–ª–æ—Å –≤ –ª—é–±–æ–π —Ü–≤–µ—Ç", "coloring", "–æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ, —Ü–≤–µ—Ç, –≤–æ–ª–æ—Å—ã", "3500"),
                    ("–ú–∞–Ω–∏–∫—é—Ä", "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏ –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–π –º–∞–Ω–∏–∫—é—Ä", "manicure", "–º–∞–Ω–∏–∫—é—Ä, –Ω–æ–≥—Ç–∏, –ø–æ–∫—Ä—ã—Ç–∏–µ", "1500"),
                    ("–ü–µ–¥–∏–∫—é—Ä", "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø–µ–¥–∏–∫—é—Ä", "pedicure", "–ø–µ–¥–∏–∫—é—Ä, –Ω–æ–≥–∏, –Ω–æ–≥—Ç–∏", "2000"),
                    ("–ë—Ä–æ–≤–∏", "–ö–æ—Ä—Ä–µ–∫—Ü–∏—è –∏ –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –±—Ä–æ–≤–µ–π", "eyebrows", "–±—Ä–æ–≤–∏, –∫–æ—Ä—Ä–µ–∫—Ü–∏—è, –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ", "800")
                ]
            elif business_type == 'barbershop':
                services = [
                    ("–ú—É–∂—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞", "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –º—É–∂—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞", "haircut", "—Å—Ç—Ä–∏–∂–∫–∞, –º—É–∂—Å–∫–∞—è, –∫–ª–∞—Å—Å–∏–∫–∞", "1200"),
                    ("–ë—Ä–∏—Ç—å–µ", "–ë—Ä–∏—Ç—å–µ –æ–ø–∞—Å–Ω–æ–π –±—Ä–∏—Ç–≤–æ–π", "shaving", "–±—Ä–∏—Ç—å–µ, –æ–ø–∞—Å–Ω–∞—è –±—Ä–∏—Ç–≤–∞", "800"),
                    ("–£–∫–ª–∞–¥–∫–∞", "–£–∫–ª–∞–¥–∫–∞ –≤–æ–ª–æ—Å —Å —É–∫–ª–∞–¥–∫–æ–π", "styling", "—É–∫–ª–∞–¥–∫–∞, –≤–æ–ª–æ—Å—ã, —Å—Ç–∏–ª—å", "600"),
                    ("–°—Ç—Ä–∏–∂–∫–∞ + –ë—Ä–∏—Ç—å–µ", "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —É—Å–ª—É–≥–∞", "combo", "—Å—Ç—Ä–∏–∂–∫–∞, –±—Ä–∏—Ç—å–µ, –∫–æ–º–ø–ª–µ–∫—Å", "1800"),
                    ("–£—Å—ã –∏ –±–æ—Ä–æ–¥–∞", "–°—Ç—Ä–∏–∂–∫–∞ —É—Å–æ–≤ –∏ –±–æ—Ä–æ–¥—ã", "beard", "—É—Å—ã, –±–æ—Ä–æ–¥–∞, —Å—Ç—Ä–∏–∂–∫–∞", "1000")
                ]
            elif business_type == 'nail_studio':
                services = [
                    ("–ú–∞–Ω–∏–∫—é—Ä", "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞–Ω–∏–∫—é—Ä", "manicure", "–º–∞–Ω–∏–∫—é—Ä, –Ω–æ–≥—Ç–∏", "1000"),
                    ("–ü–µ–¥–∏–∫—é—Ä", "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø–µ–¥–∏–∫—é—Ä", "pedicure", "–ø–µ–¥–∏–∫—é—Ä, –Ω–æ–≥–∏, –Ω–æ–≥—Ç–∏", "1500"),
                    ("–ü–æ–∫—Ä—ã—Ç–∏–µ –≥–µ–ª—å-–ª–∞–∫", "–ü–æ–∫—Ä—ã—Ç–∏–µ –≥–µ–ª—å-–ª–∞–∫–æ–º", "gel_polish", "–≥–µ–ª—å-–ª–∞–∫, –ø–æ–∫—Ä—ã—Ç–∏–µ, –Ω–æ–≥—Ç–∏", "800"),
                    ("–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ –Ω–æ–≥—Ç–µ–π", "–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ –≥–µ–ª–µ–º", "extension", "–Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ, –≥–µ–ª—å, –Ω–æ–≥—Ç–∏", "3000"),
                    ("–î–∏–∑–∞–π–Ω –Ω–æ–≥—Ç–µ–π", "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω", "design", "–¥–∏–∑–∞–π–Ω, —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π, –Ω–æ–≥—Ç–∏", "1200")
                ]
            else:
                services = [
                    ("–£—Å–ª—É–≥–∞ 1", "–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ 1", "general", "—É—Å–ª—É–≥–∞, –æ–ø–∏—Å–∞–Ω–∏–µ", "1000"),
                    ("–£—Å–ª—É–≥–∞ 2", "–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ 2", "general", "—É—Å–ª—É–≥–∞, –æ–ø–∏—Å–∞–Ω–∏–µ", "1500"),
                    ("–£—Å–ª—É–≥–∞ 3", "–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ 3", "general", "—É—Å–ª—É–≥–∞, –æ–ø–∏—Å–∞–Ω–∏–µ", "2000")
                ]
            
            # –°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥–∏
            for name, description, category, keywords, price in services:
                service_id = str(uuid.uuid4())
                cursor.execute("""
                    INSERT OR IGNORE INTO Services 
                    (id, business_id, name, description, category, keywords, price)
                    VALUES (?, ?, ?, ?, ?, ?, ?)
                """, (service_id, business_id, name, description, category, keywords, price))
            
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(services)} —É—Å–ª—É–≥")
        
        conn.commit()
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏ —Å–æ–∑–¥–∞–Ω—ã!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        cursor.execute("SELECT COUNT(*) FROM Services")
        total_services = cursor.fetchone()[0]
        print(f"üìä –í—Å–µ–≥–æ —É—Å–ª—É–≥ –≤ —Å–∏—Å—Ç–µ–º–µ: {total_services}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ª—É–≥–∏ –ø–æ –±–∏–∑–Ω–µ—Å–∞–º
        cursor.execute("""
            SELECT b.name, COUNT(s.id) as service_count
            FROM Businesses b
            LEFT JOIN Services s ON b.id = s.business_id
            GROUP BY b.id, b.name
        """)
        
        print("\nüìã –£—Å–ª—É–≥–∏ –ø–æ –±–∏–∑–Ω–µ—Å–∞–º:")
        for business_name, service_count in cursor.fetchall():
            print(f"  {business_name}: {service_count} —É—Å–ª—É–≥")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É—Å–ª—É–≥: {e}")
        return False
    
    finally:
        conn.close()

if __name__ == "__main__":
    create_test_services()
