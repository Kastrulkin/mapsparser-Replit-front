#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –æ—Ç—á—ë—Ç–æ–≤
"""
import requests
import json
import os
from dotenv import load_dotenv

load_dotenv()

def test_report_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –æ—Ç—á—ë—Ç–æ–≤"""
    
    # –ë–∞–∑–æ–≤—ã–π URL
    base_url = "https://beautybot.pro"
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π card_id –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    supabase_url = os.getenv('SUPABASE_URL')
    supabase_key = os.getenv('SUPABASE_SERVICE_ROLE_KEY')
    
    if not supabase_url or not supabase_key:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase")
        return
    
    try:
        from supabase import create_client
        supabase = create_client(supabase_url, supabase_key)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É —Å –æ—Ç—á—ë—Ç–æ–º
        result = supabase.table("Cards").select("id, title, report_path").not_.is_("report_path", "null").limit(1).execute()
        
        if not result.data:
            print("‚ùå –ù–µ—Ç –∫–∞—Ä—Ç–æ—á–µ–∫ —Å –æ—Ç—á—ë—Ç–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        
        card_id = result.data[0]['id']
        title = result.data[0]['title']
        report_path = result.data[0]['report_path']
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print(f"   ID: {card_id}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {title}")
        print(f"   –ü—É—Ç—å –∫ –æ—Ç—á—ë—Ç—É: {report_path}")
        print()
        
        # –¢–µ—Å—Ç 1: –°—Ç–∞—Ç—É—Å –æ—Ç—á—ë—Ç–∞
        print("üîç –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç—á—ë—Ç–∞")
        try:
            response = requests.get(f"{base_url}/api/reports/{card_id}/status")
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.status_code == 200:
                data = response.json()
                print(f"   –î–∞–Ω–Ω—ã–µ: {json.dumps(data, indent=2, ensure_ascii=False)}")
                print("   ‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç—á—ë—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        print()
        
        # –¢–µ—Å—Ç 2: –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á—ë—Ç–∞
        print("üëÅÔ∏è –¢–µ—Å—Ç 2: –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á—ë—Ç–∞")
        try:
            response = requests.get(f"{base_url}/api/view-report/{card_id}")
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"   Content-Type: {response.headers.get('Content-Type')}")
            print(f"   Content-Length: {response.headers.get('Content-Length')}")
            print(f"   X-Content-Type-Options: {response.headers.get('X-Content-Type-Options')}")
            print(f"   X-Frame-Options: {response.headers.get('X-Frame-Options')}")
            
            if response.status_code == 200:
                content = response.text[:200] + "..." if len(response.text) > 200 else response.text
                print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤): {content}")
                print("   ‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á—ë—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        print()
        
        # –¢–µ—Å—Ç 3: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞
        print("üì• –¢–µ—Å—Ç 3: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞")
        try:
            response = requests.get(f"{base_url}/api/download-report/{card_id}")
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"   Content-Type: {response.headers.get('Content-Type')}")
            print(f"   Content-Disposition: {response.headers.get('Content-Disposition')}")
            print(f"   Content-Length: {response.headers.get('Content-Length')}")
            print(f"   X-Content-Type-Options: {response.headers.get('X-Content-Type-Options')}")
            print(f"   X-Frame-Options: {response.headers.get('X-Frame-Options')}")
            
            if response.status_code == 200:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
                filename = f"test_report_{card_id}.html"
                with open(filename, 'w', encoding='utf-8') as f:
                    f.write(response.text)
                print(f"   ‚úÖ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {filename}")
                print("   ‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        print()
        
        print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")

if __name__ == "__main__":
    test_report_endpoints() 