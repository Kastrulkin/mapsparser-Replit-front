#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import sqlite3
import os

def clear_database():
    """–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect("reports.db")
    cursor = conn.cursor()
    
    try:
        print("üßπ –û—á–∏—â–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü (–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –∏–∑-–∑–∞ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π)
        tables = [
            "UserSessions",  # –°–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            "Cards",         # –ì–æ—Ç–æ–≤—ã–µ –æ—Ç—á—ë—Ç—ã
            "ParseQueue",    # –û—á–µ—Ä–µ–¥—å –∑–∞–ø—Ä–æ—Å–æ–≤
            "Invites",       # –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
            "Users"          # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        ]
        
        for table in tables:
            cursor.execute(f"DELETE FROM {table}")
            print(f"  ‚úÖ –û—á–∏—â–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ {table}")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å)
        cursor.execute("DELETE FROM sqlite_sequence")
        
        conn.commit()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        for table in tables:
            cursor.execute(f"SELECT COUNT(*) as count FROM {table}")
            count = cursor.fetchone()[0]
            print(f"  {table}: {count} –∑–∞–ø–∏—Å–µ–π")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    finally:
        conn.close()

def remove_report_files():
    """–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª—ã –æ—Ç—á—ë—Ç–æ–≤"""
    data_dir = "data"
    if os.path.exists(data_dir):
        print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –æ—Ç—á—ë—Ç–æ–≤ –∏–∑ {data_dir}/...")
        
        removed_count = 0
        for filename in os.listdir(data_dir):
            if filename.endswith('.html'):
                file_path = os.path.join(data_dir, filename)
                try:
                    os.remove(file_path)
                    print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω: {filename}")
                    removed_count += 1
                except Exception as e:
                    print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {filename}: {e}")
        
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –æ—Ç—á—ë—Ç–æ–≤: {removed_count}")
    else:
        print("üìÅ –ü–∞–ø–∫–∞ data –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

if __name__ == "__main__":
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Å–∏—Å—Ç–µ–º—ã...")
    
    # –û—á–∏—â–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    clear_database()
    
    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –æ—Ç—á—ë—Ç–æ–≤
    remove_report_files()
    
    print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞!")
    print("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
    print("1. –ü–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è")
    print("2. –ó–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–≤—ã–π –æ—Ç—á—ë—Ç")
    print("3. –°–∏—Å—Ç–µ–º–∞ –Ω–∞—á–Ω—ë—Ç —Ä–∞–±–æ—Ç—É —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞")
