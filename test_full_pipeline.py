#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞ SEO-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
"""
import os
import sys
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append('src')

def test_full_pipeline():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω: –ø–∞—Ä—Å–∏–Ω–≥ -> AI-–∞–Ω–∞–ª–∏–∑ -> –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞ SEO-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ (–∏–º–∏—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞)
    test_card_data = {
        "title": "–ö–∞—Ñ–µ '–£—é—Ç–Ω–æ–µ –º–µ—Å—Ç–æ'",
        "address": "—É–ª. –õ–µ–Ω–∏–Ω–∞, 123, –ú–æ—Å–∫–≤–∞",
        "phone": "+7 (495) 123-45-67",
        "site": "https://uyutnoe-mesto.ru",
        "rating": 4.2,
        "reviews_count": 45,
        "overview": {
            "description": "–£—é—Ç–Ω–æ–µ –∫–∞—Ñ–µ —Å –¥–æ–º–∞—à–Ω–µ–π –∫—É—Ö–Ω–µ–π –∏ –ø—Ä–∏—è—Ç–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π. –ò–¥–µ–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —Å–µ–º–µ–π–Ω–æ–≥–æ —É–∂–∏–Ω–∞ –∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —Å–≤–∏–¥–∞–Ω–∏–π."
        },
        "categories": ["–ö–∞—Ñ–µ", "–†–µ—Å—Ç–æ—Ä–∞–Ω—ã", "–ï–¥–∞ –∏ –Ω–∞–ø–∏—Ç–∫–∏"],
        "hours": "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ 10:00-23:00",
        "features_full": ["–ü–∞—Ä–∫–æ–≤–∫–∞", "Wi-Fi", "–î–æ—Å—Ç–∞–≤–∫–∞", "–í–µ—Ä–∞–Ω–¥–∞"],
        "products": ["–ó–∞–≤—Ç—Ä–∞–∫–∏", "–û–±–µ–¥—ã", "–£–∂–∏–Ω—ã", "–î–µ—Å–µ—Ä—Ç—ã"],
        "photos": ["photo1.jpg", "photo2.jpg", "photo3.jpg"]
    }
    
    print("üìä –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏:")
    print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: {test_card_data['title']}")
    print(f"  –ê–¥—Ä–µ—Å: {test_card_data['address']}")
    print(f"  –†–µ–π—Ç–∏–Ω–≥: {test_card_data['rating']}")
    print(f"  –û—Ç–∑—ã–≤–æ–≤: {test_card_data['reviews_count']}")
    print()
    
    # –¢–µ—Å—Ç 1: AI-–∞–Ω–∞–ª–∏–∑
    print("1Ô∏è‚É£ –¢–µ—Å—Ç AI-–∞–Ω–∞–ª–∏–∑–∞:")
    try:
        from ai_analyzer import analyze_business_data
        
        print("üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º AI-–∞–Ω–∞–ª–∏–∑...")
        analysis_result = analyze_business_data(test_card_data)
        
        print("‚úÖ AI-–∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω!")
        print(f"  –û—Ü–µ–Ω–∫–∞ SEO: {analysis_result['score']}/100")
        print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {len(analysis_result['recommendations'])}")
        
        print("üìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        for i, rec in enumerate(analysis_result['recommendations'][:5], 1):
            print(f"  {i}. {rec}")
        
        ai_test = True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ AI-–∞–Ω–∞–ª–∏–∑–∞: {e}")
        ai_test = False
    
    print()
    
    # –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞
    print("2Ô∏è‚É£ –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞:")
    try:
        from report import generate_html_report
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—á—ë—Ç–∞
        analysis_data = {
            'score': analysis_result['score'] if ai_test else 50,
            'recommendations': analysis_result['recommendations'] if ai_test else ["–¢–µ—Å—Ç–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è"],
            'ai_analysis': analysis_result['analysis'] if ai_test else {"generated_text": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑"}
        }
        
        print("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –æ—Ç—á—ë—Ç...")
        report_path = generate_html_report(test_card_data, analysis_data)
        
        print(f"‚úÖ –û—Ç—á—ë—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {report_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–ª—Å—è
        if os.path.exists(report_path):
            file_size = os.path.getsize(report_path)
            print(f"üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
            report_test = True
        else:
            print("‚ùå –§–∞–π–ª –æ—Ç—á—ë—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            report_test = False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞: {e}")
        report_test = False
    
    print()
    
    # –¢–µ—Å—Ç 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Supabase
    print("3Ô∏è‚É£ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Supabase:")
    try:
        from supabase import create_client, Client
        
        supabase_url = os.getenv('SUPABASE_URL')
        supabase_key = os.getenv('SUPABASE_KEY')
        
        if not supabase_url or not supabase_key:
            print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase")
            supabase_test = False
        else:
            supabase: Client = create_client(supabase_url, supabase_key)
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...")
            response = supabase.table('Cards').select('count').limit(1).execute()
            
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ!")
            supabase_test = True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase: {e}")
        supabase_test = False
    
    print()
    
    # –ò—Ç–æ–≥–∏
    print("=" * 60)
    print("üìã –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ü–û–õ–ù–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê:")
    print(f"AI-–∞–Ω–∞–ª–∏–∑: {'‚úÖ –£–°–ü–ï–•' if ai_test else '‚ùå –û–®–ò–ë–ö–ê'}")
    print(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞: {'‚úÖ –£–°–ü–ï–•' if report_test else '‚ùå –û–®–ò–ë–ö–ê'}")
    print(f"Supabase: {'‚úÖ –£–°–ü–ï–•' if supabase_test else '‚ùå –û–®–ò–ë–ö–ê'}")
    
    if ai_test and report_test and supabase_test:
        print("\nüéâ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        return True
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏.")
        return False

def test_worker_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –≤–æ—Ä–∫–µ—Ä–æ–º"""
    
    print("\n" + "=" * 60)
    print("üîß –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–æ—Ä–∫–µ—Ä–æ–º:")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ—Ä–∫–µ—Ä–∞
        from worker import process_queue
        
        print("‚úÖ –§—É–Ω–∫—Ü–∏–∏ –≤–æ—Ä–∫–µ—Ä–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
        from supabase import create_client, Client
        
        supabase_url = os.getenv('SUPABASE_URL')
        supabase_key = os.getenv('SUPABASE_KEY')
        
        if supabase_url and supabase_key:
            supabase: Client = create_client(supabase_url, supabase_key)
            
            # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ ParseQueue
            test_queue_item = {
                "user_id": "test_user",
                "url": "https://yandex.ru/maps/org/test-cafe/1234567890",
                "status": "pending"
            }
            
            print("üîÑ –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ –æ—á–µ—Ä–µ–¥–∏...")
            result = supabase.table("ParseQueue").insert(test_queue_item).execute()
            
            if result.data:
                print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞")
                
                # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
                supabase.table("ParseQueue").delete().eq("url", test_queue_item["url"]).execute()
                print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞")
                
                worker_test = True
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å")
                worker_test = False
        else:
            print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase")
            worker_test = False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–æ—Ä–∫–µ—Ä–∞: {e}")
        worker_test = False
    
    return worker_test

if __name__ == "__main__":
    # –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞
    pipeline_success = test_full_pipeline()
    
    # –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–æ—Ä–∫–µ—Ä–æ–º
    worker_success = test_worker_integration()
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏—Ç–æ–≥–∏
    print("\n" + "=" * 60)
    print("üèÅ –§–ò–ù–ê–õ–¨–ù–´–ï –ò–¢–û–ì–ò:")
    print(f"–ü–æ–ª–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω: {'‚úÖ –ì–û–¢–û–í' if pipeline_success else '‚ùå –¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò'}")
    print(f"–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–æ—Ä–∫–µ—Ä–æ–º: {'‚úÖ –ì–û–¢–û–í' if worker_success else '‚ùå –¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò'}")
    
    if pipeline_success and worker_success:
        print("\nüéâ –í–°–Ø –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –ö–û–†–†–ï–ö–¢–ù–û!")
        print("üöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–Ω!")
    else:
        print("\n‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –≤ –ø—Ä–æ–¥–∞–∫—à–Ω.") 