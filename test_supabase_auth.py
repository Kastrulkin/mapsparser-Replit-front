#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π Supabase
"""

import os
import sys
from dotenv import load_dotenv
import requests
import json
from datetime import datetime

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

SUPABASE_URL = os.getenv('SUPABASE_URL')
SUPABASE_KEY = os.getenv('SUPABASE_KEY')

def test_supabase_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase...")
    
    if not SUPABASE_URL or not SUPABASE_KEY:
        print("‚ùå –û—à–∏–±–∫–∞: SUPABASE_URL –∏–ª–∏ SUPABASE_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env")
        return False
    
    print(f"‚úÖ Supabase URL: {SUPABASE_URL}")
    print(f"‚úÖ Supabase Key: {SUPABASE_KEY[:20]}...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    headers = {
        'apikey': SUPABASE_KEY,
        'Authorization': f'Bearer {SUPABASE_KEY}',
        'Content-Type': 'application/json'
    }
    
    try:
        # –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ API
        response = requests.get(f"{SUPABASE_URL}/rest/v1/", headers=headers, timeout=10)
        print(f"‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
        
        # –¢–µ—Å—Ç auth API
        auth_response = requests.get(f"{SUPABASE_URL}/auth/v1/", headers=headers, timeout=10)
        print(f"‚úÖ Auth API –¥–æ—Å—Ç—É–ø–µ–Ω: {auth_response.status_code}")
        
        return True
        
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Supabase")
        return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_password_reset(email="test@example.com"):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è"""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –¥–ª—è {email}...")
    
    headers = {
        'apikey': SUPABASE_KEY,
        'Authorization': f'Bearer {SUPABASE_KEY}',
        'Content-Type': 'application/json'
    }
    
    data = {
        'email': email,
        'redirect_to': 'https://beautybot.pro/set-password'
    }
    
    try:
        response = requests.post(
            f"{SUPABASE_URL}/auth/v1/recover",
            headers=headers,
            json=data,
            timeout=30  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìä –ó–∞–≥–æ–ª–æ–≤–∫–∏: {dict(response.headers)}")
        
        if response.status_code == 200:
            print("‚úÖ –ó–∞–ø—Ä–æ—Å —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è —É—Å–ø–µ—à–µ–Ω")
            return True
        elif response.status_code == 504:
            print("‚ùå 504 Gateway Timeout - –ø—Ä–æ–±–ª–µ–º–∞ —Å email-—Å–µ—Ä–≤–∏—Å–æ–º")
            return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_supabase_settings():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Supabase...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email
    print("‚ÑπÔ∏è  –î–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã 504 –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:")
    print("   1. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP –≤ Supabase Dashboard")
    print("   2. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é email-—Å–µ—Ä–≤–∏—Å–∞")
    print("   3. –õ–∏–º–∏—Ç—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ email")
    print("   4. –°—Ç–∞—Ç—É—Å email-—Å–µ—Ä–≤–∏—Å–∞ Supabase")

def main():
    print("üöÄ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π Supabase")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if not test_supabase_connection():
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Supabase")
        return
    
    # –¢–µ—Å—Ç —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
    test_email = input("\nüìß –í–≤–µ–¥–∏—Ç–µ email –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()
    if test_email:
        test_password_reset(test_email)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    check_supabase_settings()
    
    print("\n" + "=" * 50)
    print("üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º—ã 504:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP –≤ Supabase Dashboard")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ email-—Å–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏–º–∏—Ç—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ email")
    print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π email-—Å–µ—Ä–≤–∏—Å")
    print("5. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É Supabase")

if __name__ == "__main__":
    main() 