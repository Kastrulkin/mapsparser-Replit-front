#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –Ω–∞ –¥–∞–Ω–Ω—ã—Ö Capsula Hair
"""
import sys
import os
import traceback
import sqlite3
import uuid
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –≤ sys.path
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

def find_capsula_data():
    """–ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ Capsula Hair –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect("reports.db")
    cursor = conn.cursor()
    
    print("=== –ü–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö Capsula Hair ===")
    
    # –ò—â–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Å Capsula –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∏–ª–∏ URL
    cursor.execute("""
        SELECT id, title, url, seo_score, ai_analysis, recommendations, report_path, created_at
        FROM Cards 
        WHERE title LIKE '%capsula%' OR title LIKE '%Capsula%' OR url LIKE '%capsula%'
        ORDER BY created_at DESC
    """)
    
    cards = cursor.fetchall()
    
    if not cards:
        print("‚ùå –î–∞–Ω–Ω—ã–µ Capsula Hair –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        conn.close()
        return None
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(cards)} –∫–∞—Ä—Ç–æ—á–µ–∫ Capsula Hair:")
    
    for i, card in enumerate(cards, 1):
        print(f"\n--- –ö–∞—Ä—Ç–æ—á–∫–∞ {i} ---")
        print(f"ID: {card[0]}")
        print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {card[1]}")
        print(f"URL: {card[2]}")
        print(f"SEO-–æ—Ü–µ–Ω–∫–∞: {card[3]}")
        print(f"–ò–ò-–∞–Ω–∞–ª–∏–∑: {'–ï—Å—Ç—å' if card[4] else '–ù–µ—Ç'}")
        print(f"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {'–ï—Å—Ç—å' if card[5] else '–ù–µ—Ç'}")
        print(f"–û—Ç—á—ë—Ç: {card[6] if card[6] else '–ù–µ —Å–æ–∑–¥–∞–Ω'}")
        print(f"–°–æ–∑–¥–∞–Ω: {card[7]}")
    
    conn.close()
    return cards[0] if cards else None

def run_analysis_on_capsula():
    """–ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –Ω–∞ –¥–∞–Ω–Ω—ã—Ö Capsula Hair"""
    print("\n=== –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –Ω–∞ Capsula Hair ===")
    
    try:
        from gigachat_analyzer import analyze_business_data
        
        # –î–∞–Ω–Ω—ã–µ Capsula Hair –∏–∑ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
        capsula_data = {
            'title': 'Capsulahair',
            'address': '7-—è –ª–∏–Ω–∏—è –í–∞—Å–∏–ª—å–µ–≤—Å–∫–æ–≥–æ –æ—Å—Ç—Ä–æ–≤–∞, 34, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
            'phone': '+7 (812) 407-25-34',
            'rating': '5.0',
            'reviews_count': 1244,
            'categories': ['–°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã', '–ë–∞—Ä–±–µ—Ä—à–æ–ø', '–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∞—è'],
            'hours': '–ü–Ω-–í—Å: 10:00‚Äì22:00',
            'description': '–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∞—è —Å –≤—ã—Å–æ–∫–∏–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º –∏ –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—Ç–∑—ã–≤–æ–≤',
            'photos': [],
            'reviews': [],
            'news': [],
            'products': [],
            'overview': {},
            'features_full': {'bool': [], 'valued': [], 'prices': [], 'categories': []}
        }
        
        print("–ó–∞–ø—É—Å–∫–∞–µ–º –ò–ò-–∞–Ω–∞–ª–∏–∑ –Ω–∞ –¥–∞–Ω–Ω—ã—Ö Capsula Hair...")
        print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {capsula_data['title']}")
        print(f"–ê–¥—Ä–µ—Å: {capsula_data['address']}")
        print(f"–¢–µ–ª–µ—Ñ–æ–Ω: {capsula_data['phone']}")
        print(f"–†–µ–π—Ç–∏–Ω–≥: {capsula_data['rating']}")
        print(f"–û—Ç–∑—ã–≤—ã: {capsula_data['reviews_count']}")
        
        result = analyze_business_data(capsula_data)
        
        print(f"\n‚úÖ –ò–ò-–∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω")
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á–∏: {list(result.keys())}")
        
        if 'analysis' in result:
            print(f"\nüìä –ê–Ω–∞–ª–∏–∑:")
            analysis = result['analysis']
            if isinstance(analysis, dict):
                for key, value in analysis.items():
                    print(f"  {key}: {value}")
            else:
                print(f"  {analysis}")
        
        if 'score' in result:
            print(f"\n‚≠ê SEO-–æ—Ü–µ–Ω–∫–∞: {result['score']}/100")
        
        if 'recommendations' in result:
            print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            for i, rec in enumerate(result['recommendations'], 1):
                print(f"  {i}. {rec}")
        
        return result
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞: {e}")
        traceback.print_exc()
        return None

def generate_report_for_capsula():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á—ë—Ç –¥–ª—è Capsula Hair"""
    print("\n=== –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –¥–ª—è Capsula Hair ===")
    
    try:
        from report import generate_html_report
        
        # –î–∞–Ω–Ω—ã–µ Capsula Hair
        capsula_data = {
            'title': 'Capsulahair',
            'address': '7-—è –ª–∏–Ω–∏—è –í–∞—Å–∏–ª—å–µ–≤—Å–∫–æ–≥–æ –æ—Å—Ç—Ä–æ–≤–∞, 34, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
            'phone': '+7 (812) 407-25-34',
            'rating': '5.0',
            'reviews_count': 1244,
            'categories': ['–°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã', '–ë–∞—Ä–±–µ—Ä—à–æ–ø', '–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∞—è'],
            'hours': '–ü–Ω-–í—Å: 10:00‚Äì22:00',
            'photos': [],
            'reviews': [],
            'news': [],
            'products': [],
            'overview': {},
            'features_full': {'bool': [], 'valued': [], 'prices': [], 'categories': []}
        }
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞
        analysis_data = {
            'score': 100,
            'recommendations': [
                '–°–æ–∑–¥–∞–π—Ç–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏',
                '–î–æ–±–∞–≤—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤–∞—à–∏—Ö —É—Å–ª—É–≥'
            ],
            'ai_analysis': {
                'generated_text': '–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥. –ë–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–≤—ã—à–∞–µ—Ç –¥–æ–≤–µ—Ä–∏–µ. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–∞–π—Ç–∞ —Å–Ω–∏–∂–∞–µ—Ç –≤–∏–¥–∏–º–æ—Å—Ç—å –≤ –ø–æ–∏—Å–∫–µ.',
                'strengths': ['–í—ã—Å–æ–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥', '–ú–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–æ–≤', '–ï—Å—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω', '–ï—Å—Ç—å –∞–¥—Ä–µ—Å'],
                'weaknesses': ['–ù–µ—Ç —Å–∞–π—Ç–∞', '–ù–µ—Ç —Ñ–æ—Ç–æ']
            }
        }
        
        print("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –æ—Ç—á—ë—Ç...")
        report_path = generate_html_report(capsula_data, analysis_data)
        
        print(f"‚úÖ –û—Ç—á—ë—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {report_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
        if os.path.exists(report_path):
            file_size = os.path.getsize(report_path)
            print(f"üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
            print("üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Ç—á—ë—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ...")
            os.system(f"open '{report_path}'")
            
            return report_path
        else:
            print("‚ùå –§–∞–π–ª –æ—Ç—á—ë—Ç–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω")
            return None
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞: {e}")
        traceback.print_exc()
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö Capsula Hair")
    print("=" * 50)
    
    # –®–∞–≥ 1: –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ
    capsula_card = find_capsula_data()
    
    # –®–∞–≥ 2: –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
    analysis_result = run_analysis_on_capsula()
    
    # –®–∞–≥ 3: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á—ë—Ç
    if analysis_result:
        report_path = generate_report_for_capsula()
        
        if report_path:
            print(f"\nüéâ –û—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {report_path}")
        else:
            print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ç—á—ë—Ç")
    else:
        print("\n‚ùå –ê–Ω–∞–ª–∏–∑ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω")

if __name__ == "__main__":
    main()
