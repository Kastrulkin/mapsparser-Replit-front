#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ –Ω–∞ –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–æ–π Capsula Hair
"""
import sys
import os
import traceback
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –≤ sys.path
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

def test_capsula_hair():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–æ–π Capsula Hair"""
    print("=== –¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ –Ω–∞ Capsula Hair ===")
    
    try:
        from parser import parse_yandex_card
        
        # URL –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–æ–π
        test_url = "https://yandex.ru/maps/org/capsulahair/1399955425/?ll=30.278281%2C59.940988&z=17.21"
        print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥: {test_url}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
        import signal
        
        def timeout_handler(signum, frame):
            raise TimeoutError("–ü–∞—Ä—Å–∏–Ω–≥ –ø—Ä–µ–≤—ã—Å–∏–ª –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è")
        
        signal.signal(signal.SIGALRM, timeout_handler)
        signal.alarm(120)  # 2 –º–∏–Ω—É—Ç—ã —Ç–∞–π–º–∞—É—Ç
        
        try:
            result = parse_yandex_card(test_url)
            signal.alarm(0)  # –û—Ç–∫–ª—é—á–∞–µ–º —Ç–∞–π–º–∞—É—Ç
            
            print(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω")
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á–∏: {list(result.keys())}")
            
            if 'error' in result:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ: {result['error']}")
                if 'captcha' in result['error'].lower():
                    print("üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–∞–ø—á–∞ - —ç—Ç–æ –æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞")
                return False
            else:
                print(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –ø—Ä–æ—à–µ–ª –±–µ–∑ –æ—à–∏–±–æ–∫")
                print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {result.get('title', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ')}")
                print(f"–ê–¥—Ä–µ—Å: {result.get('address', '–ù–µ –Ω–∞–π–¥–µ–Ω')}")
                print(f"–¢–µ–ª–µ—Ñ–æ–Ω: {result.get('phone', '–ù–µ –Ω–∞–π–¥–µ–Ω')}")
                print(f"–†–µ–π—Ç–∏–Ω–≥: {result.get('rating', '–ù–µ –Ω–∞–π–¥–µ–Ω')}")
                print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤: {result.get('reviews_count', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ')}")
                return True
                
        except TimeoutError:
            signal.alarm(0)
            print("‚ùå –ü–∞—Ä—Å–∏–Ω–≥ –ø—Ä–µ–≤—ã—Å–∏–ª –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (2 –º–∏–Ω)")
            return False
        except Exception as e:
            signal.alarm(0)
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
            traceback.print_exc()
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞: {e}")
        traceback.print_exc()
        return False

def test_worker_with_capsula():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º worker —Å –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–æ–π"""
    print("\n=== –¢–µ—Å—Ç worker —Å Capsula Hair ===")
    
    try:
        import sqlite3
        import uuid
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ –æ—á–µ—Ä–µ–¥—å
        conn = sqlite3.connect("reports.db")
        cursor = conn.cursor()
        
        test_id = str(uuid.uuid4())
        test_url = "https://yandex.ru/maps/org/capsulahair/1399955425/?ll=30.278281%2C59.940988&z=17.21"
        test_user_id = "f2123626-71b1-4424-8b2a-0bc93ab8f2eb"  # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        
        cursor.execute("""
            INSERT INTO ParseQueue (id, url, user_id, status)
            VALUES (?, ?, ?, 'pending')
        """, (test_id, test_url, test_user_id))
        
        conn.commit()
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–¥–∞—á–∞: {test_id}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º worker
        from worker import process_queue
        print("–ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—á–µ—Ä–µ–¥–∏...")
        process_queue()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("SELECT status FROM ParseQueue WHERE id = ?", (test_id,))
        status = cursor.fetchone()
        
        if status:
            print(f"‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏: {status[0]}")
            
            if status[0] == 'completed':
                print("üéâ –ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–ª—Å—è –ª–∏ –æ—Ç—á—ë—Ç
                cursor.execute("SELECT id, title FROM Cards WHERE user_id = ? ORDER BY created_at DESC LIMIT 1", (test_user_id,))
                card = cursor.fetchone()
                if card:
                    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –æ—Ç—á—ë—Ç: {card[1]}")
                else:
                    print("‚ö†Ô∏è –û—Ç—á—ë—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω")
            elif status[0] == 'error':
                print("‚ùå –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π")
            elif status[0] == 'captcha_required':
                print("üîç –¢—Ä–µ–±—É–µ—Ç—Å—è –∫–∞–ø—á–∞ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞")
            else:
                print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {status[0]}")
        else:
            print("‚ùå –ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è worker: {e}")
        traceback.print_exc()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ –Ω–∞ Capsula Hair")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π –ø–∞—Ä—Å–∏–Ω–≥
    parser_ok = test_capsula_hair()
    
    # –¢–µ—Å—Ç 2: Worker
    worker_ok = test_worker_with_capsula()
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"–ü–∞—Ä—Å–µ—Ä: {'‚úÖ OK' if parser_ok else '‚ùå FAIL'}")
    print(f"Worker: {'‚úÖ OK' if worker_ok else '‚ùå FAIL'}")
    
    if parser_ok and worker_ok:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω–æ —Å –∫–∞–ø—á–µ–π")

if __name__ == "__main__":
    main()
