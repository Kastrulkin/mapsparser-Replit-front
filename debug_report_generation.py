#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞
"""
import sys
import os
import traceback

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –≤ sys.path
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

def test_report_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á—ë—Ç–∞ —Å –æ—Ç–ª–∞–¥–∫–æ–π"""
    print("=== –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞ ===")
    
    try:
        from report import generate_html_report
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        card_data = {
            'title': 'Look Me',
            'address': '–õ–∏–≥–æ–≤—Å–∫–∏–π –ø—Ä–æ—Å–ø., 83–ë, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
            'phone': '+7 (939) 406-54-96',
            'rating': '4.5',
            'reviews_count': 293,
            'categories': ['–°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã', '–ù–æ–≥—Ç–µ–≤–∞—è —Å—Ç—É–¥–∏—è', '–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∞—è'],
            'hours': '–ü–Ω-–í—Å: 10:00‚Äì21:00',
            'photos': [],
            'reviews': [],
            'news': [],
            'products': [],
            'overview': {},
            'features_full': {'bool': [], 'valued': [], 'prices': [], 'categories': []}
        }
        
        analysis_data = {
            'score': 100,
            'recommendations': ['–°–æ–∑–¥–∞–π—Ç–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç', '–î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏'],
            'ai_analysis': {'generated_text': '–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥'}
        }
        
        print("–ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á—ë—Ç–∞...")
        print(f"card_data —Ç–∏–ø—ã: {[(k, type(v)) for k, v in card_data.items()]}")
        print(f"analysis_data —Ç–∏–ø—ã: {[(k, type(v)) for k, v in analysis_data.items()]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–æ–ª—è
        for key, value in card_data.items():
            if callable(value):
                print(f"‚ö†Ô∏è –ü–æ–ª–µ {key} —è–≤–ª—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π: {value}")
                card_data[key] = []  # –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
        
        result_path = generate_html_report(card_data, analysis_data)
        print(f"‚úÖ –û—Ç—á—ë—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {result_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if os.path.exists(result_path):
            print("‚úÖ –§–∞–π–ª –æ—Ç—á—ë—Ç–∞ —Å–æ–∑–¥–∞–Ω")
            file_size = os.path.getsize(result_path)
            print(f"üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
        else:
            print("‚ùå –§–∞–π–ª –æ—Ç—á—ë—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞: {e}")
        traceback.print_exc()
        return False

def test_template_rendering():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —à–∞–±–ª–æ–Ω–∞"""
    print("\n=== –¢–µ—Å—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —à–∞–±–ª–æ–Ω–∞ ===")
    
    try:
        from jinja2 import Environment, FileSystemLoader
        import os
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω
        env = Environment(loader=FileSystemLoader(os.path.join(os.path.dirname(__file__), 'src', 'templates')))
        template = env.get_template('report_template.html')
        
        # –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        card_data = {
            'title': '–¢–µ—Å—Ç',
            'address': '–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å',
            'phone': '+7 (999) 123-45-67',
            'rating': '4.5',
            'reviews_count': 100,
            'categories': ['–°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã'],
            'hours': '–ü–Ω-–ü—Ç: 10:00‚Äì20:00',
            'photos': [],
            'reviews': [],
            'news': [],
            'products': [],
            'overview': {},
            'features_full': {'bool': [], 'valued': [], 'prices': [], 'categories': []}
        }
        
        analysis_data = {
            'score': 85,
            'recommendations': ['–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 1', '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 2'],
            'ai_analysis': {'generated_text': '–¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑'}
        }
        
        print("–†–µ–Ω–¥–µ—Ä–∏–º —à–∞–±–ª–æ–Ω...")
        html = template.render(card=card_data, analysis=analysis_data, competitor=None)
        
        print(f"‚úÖ –®–∞–±–ª–æ–Ω –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω, —Ä–∞–∑–º–µ—Ä: {len(html)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        test_path = os.path.join(os.path.dirname(__file__), 'test_report.html')
        with open(test_path, 'w', encoding='utf-8') as f:
            f.write(html)
        
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {test_path}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —à–∞–±–ª–æ–Ω–∞: {e}")
        traceback.print_exc()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏"""
    print("üîç –û—Ç–ª–∞–¥–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —à–∞–±–ª–æ–Ω–∞
    template_ok = test_template_rendering()
    
    # –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞
    report_ok = test_report_generation()
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –û–¢–õ–ê–î–ö–ò:")
    print(f"–®–∞–±–ª–æ–Ω: {'‚úÖ OK' if template_ok else '‚ùå FAIL'}")
    print(f"–û—Ç—á—ë—Ç: {'‚úÖ OK' if report_ok else '‚ùå FAIL'}")
    
    if template_ok and report_ok:
        print("\nüéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –æ—Ç—á—ë—Ç–∞")

if __name__ == "__main__":
    main()
