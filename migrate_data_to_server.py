#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
"""
import sqlite3
import json
import requests
import os

def get_local_data():
    """–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã"""
    conn = sqlite3.connect('reports.db')
    cursor = conn.cursor()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cursor.execute('SELECT * FROM Users')
    users = cursor.fetchall()
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∏–∑–Ω–µ—Å—ã
    cursor.execute('SELECT * FROM Businesses')
    businesses = cursor.fetchall()
    
    # –ü–æ–ª—É—á–∞–µ–º —É—Å–ª—É–≥–∏
    cursor.execute('SELECT * FROM UserServices')
    services = cursor.fetchall()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —É—Å–ª—É–≥
    cursor.execute('SELECT * FROM UserServiceExamples')
    service_examples = cursor.fetchall()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –æ—Ç–∑—ã–≤–æ–≤
    cursor.execute('SELECT * FROM UserReviewExamples')
    review_examples = cursor.fetchall()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –Ω–æ–≤–æ—Å—Ç–µ–π
    cursor.execute('SELECT * FROM UserNewsExamples')
    news_examples = cursor.fetchall()
    
    conn.close()
    
    return {
        'users': users,
        'businesses': businesses,
        'services': services,
        'service_examples': service_examples,
        'review_examples': review_examples,
        'news_examples': news_examples
    }

def create_sql_script(data):
    """–°–æ–∑–¥–∞—Ç—å SQL —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö"""
    sql_script = []
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    for user in data['users']:
        sql_script.append(f"""
INSERT OR REPLACE INTO Users (id, email, password_hash, name, phone, created_at, is_active, is_verified, is_superadmin)
VALUES ('{user[0]}', '{user[1]}', '{user[2]}', '{user[3]}', '{user[4]}', '{user[5]}', {user[6]}, {user[7]}, {user[8] if len(user) > 8 else 0});
        """)
    
    # –ë–∏–∑–Ω–µ—Å—ã
    for business in data['businesses']:
        sql_script.append(f"""
INSERT OR REPLACE INTO Businesses (id, name, description, industry, business_type, address, working_hours, phone, email, website, owner_id, is_active, created_at, updated_at)
VALUES ('{business[0]}', '{business[1]}', '{business[2]}', '{business[3]}', '{business[4]}', '{business[5]}', '{business[6]}', '{business[7]}', '{business[8]}', '{business[9]}', '{business[10]}', {business[11]}, '{business[12]}', '{business[13]}');
        """)
    
    # –£—Å–ª—É–≥–∏
    for service in data['services']:
        sql_script.append(f"""
INSERT OR REPLACE INTO UserServices (id, user_id, category, name, description, keywords, price, created_at, updated_at, business_id)
VALUES ('{service[0]}', '{service[1]}', '{service[2]}', '{service[3]}', '{service[4]}', '{service[5]}', '{service[6]}', '{service[7]}', '{service[8]}', '{service[9] if len(service) > 9 else "NULL"}');
        """)
    
    return '\n'.join(sql_script)

if __name__ == "__main__":
    print("üìä –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã...")
    data = get_local_data()
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ:")
    print(f"  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(data['users'])}")
    print(f"  - –ë–∏–∑–Ω–µ—Å–æ–≤: {len(data['businesses'])}")
    print(f"  - –£—Å–ª—É–≥: {len(data['services'])}")
    print(f"  - –ü—Ä–∏–º–µ—Ä–æ–≤ —É—Å–ª—É–≥: {len(data['service_examples'])}")
    print(f"  - –ü—Ä–∏–º–µ—Ä–æ–≤ –æ—Ç–∑—ã–≤–æ–≤: {len(data['review_examples'])}")
    print(f"  - –ü—Ä–∏–º–µ—Ä–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π: {len(data['news_examples'])}")
    
    # –°–æ–∑–¥–∞–µ–º SQL —Å–∫—Ä–∏–ø—Ç
    sql_script = create_sql_script(data)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    with open('migrate_data.sql', 'w', encoding='utf-8') as f:
        f.write(sql_script)
    
    print("‚úÖ SQL —Å–∫—Ä–∏–ø—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ migrate_data.sql")
    print("üìã –¢–µ–ø–µ—Ä—å –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:")
    print("   sqlite3 reports.db < migrate_data.sql")
